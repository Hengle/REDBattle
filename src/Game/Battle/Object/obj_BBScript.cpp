#include "obj_BBScript.h"
#include <vector>

const uint16_t commandSizeTable[2596] =
{
    36u,
    4u,
    40u,
    4u,
    12u,
    4u,
    24u,
    12u,
    20u,
    4u,
    4u,
    36u,
    36u,
    56u,
    36u,
    36u,
    4u,
    36u,
    4u,
    8u,
    4u,
    8u,
    4u,
    8u,
    44u,
    44u,
    16u,
    36u,
    36u,
    68u,
    20u,
    56u,
    36u,
    48u,
    40u,
    40u,
    12u,
    12u,
    36u,
    12u,
    4u,
    8u,
    20u,
    12u,
    16u,
    24u,
    20u,
    20u,
    8u,
    8u,
    20u,
    8u,
    32u,
    28u,
    24u,
    8u,
    8u,
    8u,
    8u,
    44u,
    20u,
    20u,
    28u,
    20u,
    20u,
    20u,
    20u,
    8u,
    8u,
    8u,
    36u,
    4u,
    20u,
    8u,
    36u,
    68u,
    36u,
    36u,
    36u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    8u,
    12u,
    12u,
    4u,
    4u,
    8u,
    12u,
    4u,
    4u,
    12u,
    12u,
    12u,
    12u,
    12u,
    12u,
    12u,
    4u,
    4u,
    8u,
    12u,
    12u,
    4u,
    4u,
    8u,
    12u,
    12u,
    12u,
    8u,
    8u,
    8u,
    8u,
    4u,
    4u,
    8u,
    8u,
    8u,
    4u,
    4u,
    8u,
    12u,
    12u,
    12u,
    4u,
    4u,
    8u,
    8u,
    8u,
    8u,
    4u,
    4u,
    8u,
    8u,
    12u,
    12u,
    4u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    12u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    12u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    12u,
    4u,
    8u,
    8u,
    8u,
    8u,
    8u,
    16u,
    8u,
    12u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    12u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    12u,
    36u,
    36u,
    40u,
    0u,
    8u,
    12u,
    12u,
    12u,
    12u,
    12u,
    16u,
    8u,
    0u,
    0u,
    8u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    8u,
    4u,
    4u,
    4u,
    4u,
    8u,
    12u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    12u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    0u,
    0u,
    8u,
    8u,
    8u,
    8u,
    20u,
    8u,
    8u,
    0u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    0u,
    8u,
    0u,
    0u,
    8u,
    8u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    8u,
    20u,
    12u,
    8u,
    8u,
    4u,
    4u,
    4u,
    4u,
    4u,
    24u,
    0u,
    8u,
    20u,
    20u,
    20u,
    20u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    12u,
    12u,
    12u,
    8u,
    4u,
    8u,
    8u,
    8u,
    4u,
    4u,
    8u,
    4u,
    4u,
    4u,
    8u,
    8u,
    4u,
    84u,
    0u,
    0u,
    0u,
    16u,
    32u,
    16u,
    16u,
    16u,
    16u,
    16u,
    16u,
    8u,
    12u,
    16u,
    44u,
    28u,
    28u,
    16u,
    16u,
    16u,
    12u,
    12u,
    12u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    40u,
    40u,
    36u,
    40u,
    40u,
    36u,
    68u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    4u,
    40u,
    12u,
    40u,
    8u,
    8u,
    40u,
    40u,
    40u,
    36u,
    36u,
    40u,
    40u,
    40u,
    36u,
    20u,
    12u,
    44u,
    4u,
    8u,
    8u,
    0u,
    0u,
    40u,
    40u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    0u,
    28u,
    32u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    36u,
    16u,
    8u,
    4u,
    8u,
    4u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    4u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    8u,
    24u,
    8u,
    12u,
    12u,
    12u,
    40u,
    32u,
    4u,
    8u,
    8u,
    8u,
    8u,
    84u,
    36u,
    84u,
    20u,
    44u,
    36u,
    20u,
    36u,
    36u,
    20u,
    20u,
    84u,
    84u,
    12u,
    12u,
    4u,
    20u,
    84u,
    84u,
    36u,
    4u,
    24u,
    36u,
    20u,
    44u,
    44u,
    12u,
    12u,
    48u,
    48u,
    44u,
    44u,
    48u,
    48u,
    20u,
    36u,
    36u,
    36u,
    8u,
    40u,
    40u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    16u,
    0u,
    0u,
    0u,
    0u,
    16u,
    16u,
    16u,
    16u,
    0u,
    16u,
    16u,
    20u,
    8u,
    16u,
    16u,
    16u,
    16u,
    16u,
    16u,
    44u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    4u,
    12u,
    4u,
    8u,
    8u,
    12u,
    4u,
    8u,
    12u,
    8u,
    52u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    4u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    12u,
    4u,
    12u,
    4u,
    12u,
    12u,
    28u,
    28u,
    8u,
    12u,
    12u,
    12u,
    12u,
    4u,
    12u,
    4u,
    28u,
    28u,
    8u,
    8u,
    12u,
    0u,
    0u,
    0u,
    12u,
    4u,
    12u,
    4u,
    8u,
    28u,
    28u,
    8u,
    8u,
    0u,
    8u,
    8u,
    8u,
    4u,
    8u,
    4u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    0u,
    0u,
    8u,
    4u,
    8u,
    4u,
    8u,
    4u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    4u,
    0u,
    0u,
    8u,
    4u,
    8u,
    4u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    4u,
    8u,
    4u,
    0u,
    0u,
    0u,
    0u,
    8u,
    4u,
    8u,
    4u,
    8u,
    4u,
    8u,
    4u,
    36u,
    8u,
    4u,
    8u,
    4u,
    0u,
    0u,
    0u,
    8u,
    4u,
    8u,
    4u,
    36u,
    8u,
    4u,
    8u,
    4u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    4u,
    8u,
    4u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    4u,
    8u,
    4u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    4u,
    8u,
    4u,
    8u,
    4u,
    8u,
    4u,
    8u,
    4u,
    8u,
    4u,
    8u,
    4u,
    8u,
    4u,
    8u,
    8u,
    16u,
    16u,
    8u,
    0u,
    0u,
    0u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    8u,
    8u,
    0u,
    8u,
    4u,
    8u,
    4u,
    8u,
    4u,
    8u,
    4u,
    8u,
    4u,
    8u,
    4u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    16u,
    8u,
    0u,
    0u,
    12u,
    8u,
    8u,
    8u,
    8u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    8u,
    20u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    36u,
    8u,
    8u,
    40u,
    40u,
    8u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    36u,
    8u,
    8u,
    16u,
    8u,
    36u,
    12u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    36u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    36u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    36u,
    36u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    0u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    36u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    36u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    24u,
    8u,
    8u,
    16u,
    24u,
    24u,
    8u,
    4u,
    8u,
    8u,
    8u,
    44u,
    44u,
    44u,
    44u,
    8u,
    8u,
    12u,
    12u,
    8u,
    8u,
    36u,
    8u,
    8u,
    8u,
    8u,
    28u,
    28u,
    8u,
    8u,
    36u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    28u,
    8u,
    8u,
    20u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    92u,
    92u,
    48u,
    92u,
    68u,
    8u,
    12u,
    28u,
    12u,
    16u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    8u,
    8u,
    8u,
    8u,
    4u,
    8u,
    8u,
    20u,
    20u,
    28u,
    24u,
    24u,
    20u,
    20u,
    44u,
    44u,
    12u,
    16u,
    16u,
    20u,
    12u,
    12u,
    20u,
    24u,
    36u,
    40u,
    4u,
    60u,
    68u,
    0u,
    0u,
    0u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    0u,
    0u,
    0u,
    0u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    8u,
    36u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    8u,
    36u,
    8u,
    36u,
    4u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    36u,
    8u,
    12u,
    36u,
    8u,
    8u,
    8u,
    8u,
    36u,
    8u,
    8u,
    36u,
    8u,
    4u,
    8u,
    0u,
    0u,
    0u,
    8u,
    8u,
    36u,
    68u,
    8u,
    8u,
    4u,
    8u,
    36u,
    4u,
    12u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    0u,
    0u,
    8u,
    36u,
    12u,
    12u,
    36u,
    12u,
    8u,
    8u,
    8u,
    16u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    20u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    4u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    36u,
    36u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    8u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    36u,
    36u,
    36u,
    36u,
    36u,
    36u,
    36u,
    36u,
    8u,
    8u,
    4u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    36u,
    8u,
    8u,
    36u,
    36u,
    36u,
    8u,
    8u,
    40u,
    4u,
    4u,
    4u,
    4u,
    4u,
    12u,
    4u,
    4u,
    8u,
    8u,
    12u,
    36u,
    36u,
    36u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    4u,
    8u,
    8u,
    8u,
    0u,
    8u,
    40u,
    12u,
    36u,
    44u,
    20u,
    4u,
    52u,
    52u,
    4u,
    4u,
    40u,
    264u,
    4u,
    8u,
    4u,
    8u,
    4u,
    8u,
    4u,
    148u,
    164u,
    4u,
    20u,
    20u,
    20u,
    4u,
    4u,
    4u,
    8u,
    32u,
    32u,
    8u,
    32u,
    36u,
    8u,
    8u,
    0u,
    0u,
    0u,
    8u,
    12u,
    4u,
    4u,
    12u,
    12u,
    12u,
    4u,
    4u,
    8u,
    12u,
    8u,
    8u,
    4u,
    4u,
    8u,
    12u,
    32u,
    36u,
    4u,
    36u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    8u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    24u,
    8u,
    24u,
    12u,
    12u,
    16u,
    12u,
    8u,
    8u,
    8u,
    0u,
    8u,
    8u,
    12u,
    12u,
    8u,
    28u,
    8u,
    8u,
    40u,
    40u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    4u,
    8u,
    4u,
    8u,
    12u,
    44u,
    8u,
    8u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    8u,
    0u,
    0u,
    0u,
    8u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    0u,
    0u,
    0u,
    12u,
    12u,
    12u,
    12u,
    0u,
    12u,
    12u,
    12u,
    12u,
    12u,
    12u,
    12u,
    16u,
    0u,
    8u,
    4u,
    8u,
    4u,
    8u,
    8u,
    0u,
    8u,
    8u,
    0u,
    4u,
    8u,
    8u,
    8u,
    4u,
    12u,
    16u,
    68u,
    8u,
    8u,
    8u,
    8u,
    8u,
    0u,
    4u,
    8u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    4u,
    4u,
    28u,
    28u,
    8u,
    28u,
    28u,
    12u,
    8u,
    36u,
    8u,
    8u,
    8u,
    8u,
    4u,
    4u,
    4u,
    4u,
    4u,
    8u,
    8u,
    8u,
    16u,
    8u,
    20u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    8u,
    16u,
    4u,
    8u,
    8u,
    20u,
    16u,
    24u,
    12u,
    0u,
    0u,
    28u,
    16u,
    4u,
    8u,
    0u,
    0u,
    0u,
    4u,
    0u,
    0u,
    0u,
    4u,
    8u,
    8u,
    16u,
    48u,
    36u,
    40u,
    4u,
    40u,
    40u,
    8u,
    12u,
    16u,
    8u,
    8u,
    44u,
    36u,
    8u,
    0u,
    36u,
    40u,
    8u,
    4u,
    8u,
    8u,
    8u,
    8u,
    48u,
    8u,
    8u,
    8u,
    8u,
    36u,
    36u,
    4u,
    36u,
    4u,
    4u,
    4u,
    36u,
    4u,
    4u,
    36u,
    4u,
    12u,
    20u,
    4u,
    8u,
    16u,
    4u,
    36u,
    48u,
    52u,
    4u,
    152u,
    164u,
    124u,
    4u,
    8u,
    8u,
    4u,
    12u,
    4u,
    8u,
    56u,
    4u,
    8u,
    8u,
    8u,
    28u,
    12u,
    8u,
    4u,
    12u,
    12u,
    20u,
    4u,
    4u,
    8u,
    4u,
    8u,
    8u,
    8u,
    36u,
    36u,
    40u,
    16u,
    16u,
    16u,
    16u,
    8u,
    8u,
    4u,
    36u,
    8u,
    4u,
    36u,
    8u,
    4u,
    12u,
    20u,
    8u,
    12u,
    20u,
    16u,
    16u,
    36u,
    8u,
    20u,
    8u,
    20u,
    32u,
    16u,
    40u,
    40u,
    4u,
    76u,
    36u,
    8u,
    8u,
    56u,
    16u,
    12u,
    8u,
    44u,
    4u,
    16u,
    40u,
    8u,
    4u,
    36u,
    4u,
    36u,
    36u,
    8u,
    4u,
    20u,
    8u,
    8u,
    8u,
    4u,
    8u,
    16u,
    8u,
    8u,
    8u,
    8u,
    8u,
    4u,
    4u,
    12u,
    12u,
    12u,
    16u,
    0u,
    4u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    8u,
    8u,
    8u,
    16u,
    36u,
    20u,
    20u,
    68u,
    4u,
    0u,
    28u,
    28u,
    28u,
    8u,
    8u,
    16u,
    8u,
    12u,
    8u,
    8u,
    4u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    8u,
    8u,
    8u,
    0u,
    0u,
    12u,
    8u,
    8u,
    8u,
    4u,
    8u,
    8u,
    8u,
    8u,
    4u,
    8u,
    8u,
    8u,
    8u,
    8u,
    40u,
    8u,
    72u,
    8u,
    4u,
    4u,
    8u,
    20u,
    12u,
    16u,
    8u,
    12u,
    0u,
    0u,
    8u,
    8u,
    8u,
    8u,
    0u,
    0u,
    40u,
    8u,
    8u,
    36u,
    8u,
    16u,
    4u,
    12u,
    12u,
    8u,
    12u,
    12u,
    12u,
    12u,
    8u,
    44u,
    20u,
    12u,
    12u,
    8u,
    12u,
    12u,
    12u,
    12u,
    12u,
    12u,
    12u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    0u,
    0u,
    16u,
    8u,
    8u,
    8u,
    8u,
    8u,
    40u,
    16u,
    72u,
    72u,
    136u,
    136u,
    8u,
    8u,
    8u,
    4u,
    8u,
    8u,
    8u,
    8u,
    8u,
    68u,
    4u,
    8u,
    8u,
    8u,
    40u,
    12u,
    4u,
    36u,
    20u,
    12u,
    12u,
    8u,
    12u,
    8u,
    24u,
    8u,
    8u,
    36u,
    104u,
    0u,
    0u,
    84u,
    4u,
    8u,
    8u,
    8u,
    12u,
    24u,
    8u,
    8u,
    8u,
    8u,
    36u,
    8u,
    8u,
    36u,
    8u,
    8u,
    8u,
    8u,
    36u,
    8u,
    36u,
    8u,
    8u,
    36u,
    8u,
    8u,
    8u,
    8u,
    8u,
    12u,
    4u,
    40u,
    8u,
    4u,
    4u,
    40u,
    32u,
    8u,
    40u,
    0u,
    8u,
    8u,
    8u,
    8u,
    8u,
    0u,
    0u,
    0u,
    0u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    4u,
    8u,
    8u,
    8u,
    40u,
    8u,
    8u,
    8u,
    8u,
    8u,
    8u,
    4u,
    4u,
    44u,
    8u,
    8u,
    8u,
    8u,
    44u,
    8u,
    40u,
    36u,
    4u,
    12u,
    8u,
    4u,
    12u,
    8u,
    44u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    0u,
    8u,
    12u,
    4u,
    4u,
    0u,
    8u,
    4u,
    4u,
    4u,
    16u,
    8u,
    12u,
    12u,
    12u,
    8u,
    8u,
    20u,
    8u,
    4u,
    20u,
    20u,
    48u,
    4u,
    8u,
    68u,
    68u,
    40u,
    20u,
    8u,
    16u,
    16u,
    28u,
    8u,
    12u,
    8u,
    4u,
    36u,
    36u,
    36u,
    40u,
    4u,
    4u,
    4u,
    4u,
    20u,
    20u,
    4u,
    8u,
    8u,
    8u,
    8u,
    8u,
    4u,
    8u,
    64u,
    64u,
    8u,
    28u,
    28u,
    4u,
    8u,
    8u,
    100u,
    100u,
    100u,
    100u,
    100u,
    100u,
    108u,
    108u,
    108u,
    108u,
    108u,
    108u,
    108u,
    108u,
    100u,
    108u,
    108u,
    108u,
    116u,
    116u,
    116u,
    116u,
    108u,
    4u,
    108u,
    108u,
    108u,
    108u,
    64u,
    8u,
    8u,
    4u,
    44u,
    40u,
    40u,
    108u,
    52u,
    108u,
    108u,
    108u,
    20u,
    92u,
    108u,
    108u,
    76u,
    12u,
    12u,
    12u,
    12u,
    12u,
    132u,
    4u,
    100u,
    4u,
    68u,
    4u,
    12u,
    12u,
    44u,
    8u,
    28u,
    12u,
    12u,
    40u,
    36u
};

void CBBSFileAnalyzeData::BBSAnalyzeExe(unsigned char* addr, uint32_t size)
{
    m_DataTopAddr = addr;
    m_ActionBeginCount = *(int*)addr;
    m_ActionBeginListAddr = (sActionBegin*)(addr + 4);
    m_ScriptTopAddr = (unsigned char*)&m_ActionBeginListAddr[m_ActionBeginCount];
    AllocateHashTable(m_ActionBeginCount, 0x12C);

    m_ActIndexTable->ClearAllNode();

    for (int i = 0; i < m_ActionBeginCount; i++)
    {
        m_ActIndexTable->m_NodeCnt++;
        auto node = m_ActIndexTable->m_Node[m_ActIndexTable->m_NodeCnt - 1];
        node.SetData(m_ActionBeginListAddr[i].m_OffsetAddr);
        *(uint32_t*)node.GetKey() = AA_MakeHash(m_ActionBeginListAddr[i].m_ActionName.GetStr());
    }

    if (m_ActIndexTable->m_NodeCnt)
        qsort(m_ActIndexTable->m_Node, m_ActIndexTable->m_NodeCnt, sizeof(CHashNodeC32BYTEtoU32),
              CHashTable<CHashNodeC32BYTEtoU32>::CompNode);

    auto initFuncTable = [this, size](CHashTable<CHashNodeC32BYTEtoU32>* pAddrTable, uint64_t targetID)
    {
        auto unk = size + (uint64_t)m_DataTopAddr;
        if (*(uint64_t*)m_ScriptTopAddr < unk)
        {
            int offset = 0;
            int data = 0;
            std::vector<CHashKeyC32BYTE> hashes{};
            do
            {
                uint64_t begin = *(uint64_t*)m_ScriptTopAddr;
                uint32_t command = *(uint32_t*)(begin + offset);
                if (command == targetID)
                {
                    auto name = (const char*)(begin + offset + 4);
                    pAddrTable->m_NodeCnt++;
                    auto node = pAddrTable->m_Node[pAddrTable->m_NodeCnt - 1];
                    node.SetData(data);
                    *(uint32_t*)node.GetKey() = AA_MakeHash(name);
                    hashes.push_back(*(CHashKeyC32BYTE*)node.GetKey());
                }
                data += commandSizeTable[command];
                offset = data;
            }
            while (*(uint64_t*)m_ScriptTopAddr + (uint64_t)offset < unk);
        }
        if (pAddrTable->m_NodeCnt)
            qsort(pAddrTable->m_Node, pAddrTable->m_NodeCnt, sizeof(CHashNodeC32BYTEtoU32),
                  CHashTable<CHashNodeC32BYTEtoU32>::CompNode);
    };

    initFuncTable(m_FuncAddrTable.get(), ID_FuncBegin);
    initFuncTable(m_PreFuncAddrTable.get(), ID_PreFuncBegin);
    initFuncTable(m_PostFuncAddrTable.get(), ID_PostFuncBegin);
}

unsigned char* CBBSFileAnalyzeData::GetFuncAddrBase(const CXXBYTE<32>& funcName,
                                                    CHashTable<CHashNodeC32BYTEtoU32>* pTable)
{
    auto hash = AA_MakeHash(funcName.GetStr());
    auto count = pTable->m_NodeCnt - 1;
    auto unk = 0;
    CHashNodeC32BYTEtoU32* node = nullptr;

    if (count < 0) return nullptr;

    while (true)
    {
        auto index = (count + unk) >> 1;
        node = &pTable->m_Node[index];
        auto key = node->GetKey();
        if (key->GetHash() == hash) break;

        auto temp = count + 1;

        if (key->GetHash() >= hash)
        {
            count = index;
            temp = unk;
        }
        unk = temp;
        if (temp > count) return nullptr;
    }
    if (node) return &m_ScriptTopAddr[node->GetData()];
    else return nullptr;
}

unsigned char* CBBSFileAnalyzeData::GetGotoAddrBBSF(unsigned char* curActionTop, const CXXBYTE<32>& gotoLabel)
{
    while (true)
    {
        auto command = 0;
        while (true)
        {
            command = *(uint32_t*)curActionTop;
            if (command != 11) break;
            char* str = *(char**)(curActionTop + 4);
            if (!strncmp(str, gotoLabel.GetStr(), 0x20)) return curActionTop;
            curActionTop += commandSizeTable[*(uint32_t*)curActionTop];
        }
        if (command == ID_ActionEnd) break;
        curActionTop += commandSizeTable[command];
    }

    return nullptr;
}
